<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>CRUD Services Snippet</Title>
      <Author>Florent Delaliaux</Author>
      <Description>Create a Services Class for a CRUD</Description>
      <Shortcut>CRUDsrv</Shortcut>
    </Header>
    <Snippet>
      <Code Language="CSharp">
        <![CDATA[
        /// <summary>
        /// Classe des Services pour les $TableName$
        /// </summary>
        public class $TableName$Services
        {

            private readonly $Context$ _context;

            /// <summary>
            /// Constructeur de la classe
            /// </summary>
            /// <param name="context">Contexte de connexion à la BDD</param>
            public $TableName$Services($Context$ context)
            {
                _context = context;
            }

            /// <summary>
            /// Demande d'ajout d'un objet de cette classe
            /// </summary>
            /// <param name="obj">Objet à ajouter</param>
            public void Add$ClassName$($ClassName$ obj)
            {
                if (obj == null)
                {
                    throw new ArgumentNullException(nameof(obj));
                }
                _context.$TableName$.Add(obj);
                _context.SaveChanges();
            }

            /// <summary>
            /// Demande de suppression d'un objet de cette classe
            /// </summary>
            /// <param name="obj">Objet à supprimer</param>
            public void Delete$ClassName$($ClassName$ obj)
            {
                if (obj == null)
                {
                    throw new ArgumentNullException(nameof(obj));
                }
                _context.$TableName$.Remove(obj);
                _context.SaveChanges();
            }

            /// <summary>
            /// Demande de la liste de tous les objets de cette classe
            /// </summary>
            /// <returns>Liste contenant tous les objets de cette classe</returns>
            public IEnumerable<$ClassName$> GetAll$ClassName$s()
            {
                // Penser à ajouter les "Include()" nécessaires
                return _context.$TableName$.ToList();
            }

            /// <summary>
            /// Demande d'un objet spécifique à partir de son ID
            /// </summary>
            /// <param name="id">ID de l'objet à retourner</param>
            /// <returns>Objet possédant l'ID indiquée</returns>
            public $ClassName$ Get$ClassName$ById(int id)
            {
                // Penser à ajouter les "Include()" nécessaires
                return _context.$TableName$.FirstOrDefault(obj => obj.Id$ClassName$ == id);
            }

            /// <summary>
            /// Demande de mise à jour d'un objet
            /// </summary>
            /// <param name="obj"></param>
            public void Update$ClassName$($ClassName$ obj)
            {
                _context.SaveChanges();
            }

        }
        ]]>
      </Code>
      <Declarations>
        <Literal>
          <ID>TableName</ID>
          <ToolTip>Name of the table in the DB.</ToolTip>
          <Default>[Table]</Default>
        </Literal>
        <Literal>
          <ID>ClassName</ID>
          <ToolTip>Name of the class (Model/POCO).</ToolTip>
          <Default>[Class]</Default>
        </Literal>
        <Literal>
          <ID>Context</ID>
          <ToolTip>Name of the Context class.</ToolTip>
          <Default>MyDbContext</Default>
        </Literal>
      </Declarations>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>